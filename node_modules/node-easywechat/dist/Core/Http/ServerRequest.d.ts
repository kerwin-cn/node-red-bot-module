/// <reference types="node" />
/// <reference types="node" />
import { IncomingMessage } from "http";
import ServerRequestInterface from "./Contracts/ServerRequestInterface";
import MessageMixin from "./Minxins/MessageMixin";
import RequestMixin from "./Minxins/RequestMixin";
/**
 * 服务器收到的请求对象
 */
declare class ServerRequest implements ServerRequestInterface {
    protected attributes: Record<string, any>;
    protected cookieParams: Record<string, any>;
    protected parsedBody: Record<string, any>;
    protected queryParams: Record<string, any>;
    protected serverParams: Record<string, any>;
    protected uploadedFiles: Record<string, any>;
    constructor(method: string, url: string, headers?: Record<string, any>, body?: Buffer | Record<string, any> | string, version?: string, serverParams?: Record<string, any>);
    /**
     * 解析 body 内容
     * 支持 JSON字符串、XML字符串、QueryString等格式
     */
    protected parseBody(): Promise<void>;
    getServerParams(): Record<string, any>;
    getCookieParams(): Record<string, any>;
    withCookieParams(cookies: Record<string, any>): this;
    getQueryParams(): Record<string, any>;
    withQueryParams(query: Record<string, any>): this;
    getUploadedFiles(): Record<string, any>;
    withUploadedFiles(files: Record<string, any>): this;
    getParsedBody(): Promise<Record<string, any>>;
    withParsedBody(data: Record<string, any>): this;
    getAttributes(): Record<string, any>;
    getAttribute(name: string, defaultValue?: any): any;
    withAttribute(name: string, value: any): this;
    withoutAttribute(name: string): this;
    /**
     * 通过 IncomingMessage 创建实例
     *
     * 由于 IncomingMessage 的 body 流的特殊性，某些框架（目前已知：fastify）
     * 可能会自动读取后挂载到上下文中，从而导致 node-easywechat 去尝试读取时报错。
     * 这时可以选择传入第二个参数，即 body 的内容
     *
     * @param req
     * @param body 支持 Buffer、object对象、JSON字符串、XML字符串、QueryString格式的 body 内容字符串
     * @returns
     */
    static createFromIncomingMessage(req: IncomingMessage, body?: Buffer | Record<string, any> | string): Promise<ServerRequest>;
}
interface ServerRequest extends MessageMixin, RequestMixin {
}
export = ServerRequest;
