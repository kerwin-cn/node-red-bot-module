'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const merge_1 = __importDefault(require("merge"));
const ConfigInterface_1 = __importDefault(require("../Core/Contracts/ConfigInterface"));
const CacheMixin_1 = __importDefault(require("../Core/Mixins/CacheMixin"));
const ConfigMixin_1 = __importDefault(require("../Core/Mixins/ConfigMixin"));
const HttpClientMixin_1 = __importDefault(require("../Core/Mixins/HttpClientMixin"));
const ServerRequestMixin_1 = __importDefault(require("../Core/Mixins/ServerRequestMixin"));
const Utils_1 = require("../Core/Support/Utils");
const Merchant_1 = __importDefault(require("./Merchant"));
const Server_1 = __importDefault(require("./Server"));
const Utils_2 = __importDefault(require("./Utils"));
const Config_1 = __importDefault(require("../OfficialAccount/Config"));
const Client_1 = __importDefault(require("./Client"));
const Validator_1 = __importDefault(require("./Validator"));
/**
 * 微信支付应用
 */
class Application {
    constructor(config) {
        this.merchant = null;
        this.encryptor = null;
        this.server = null;
        this.client = null;
        this.utils = null;
        this.validator = null;
        if (config instanceof ConfigInterface_1.default) {
            this.setConfig(config);
        }
        else {
            this.setConfig(new Config_1.default(config));
        }
    }
    getMerchant() {
        var _a;
        if (!this.merchant) {
            this.merchant = new Merchant_1.default(this.config.get('mch_id'), this.config.get('private_key'), this.config.get('certificate'), this.config.get('secret_key'), this.config.get('v2_secret_key'), (_a = this.config.get('platform_certs')) !== null && _a !== void 0 ? _a : [], this);
        }
        return this.merchant;
    }
    /**
     * 设置当前账户实例
     * @param merchant
     * @returns
     */
    setMerchant(merchant) {
        this.merchant = merchant;
        return this;
    }
    getServer() {
        if (!this.server) {
            this.server = new Server_1.default(this.getMerchant(), this.getRequest());
        }
        else {
            this.server.setRequest(this.getRequest());
        }
        return this.server;
    }
    /**
     * 设置服务端实例
     * @param server
     * @returns
     */
    setServer(server) {
        this.server = server;
        return this;
    }
    /**
     * 设置工具实例
     * @param utils
     */
    setUtils(utils) {
        this.utils = utils;
    }
    getUtils() {
        if (!this.utils) {
            this.utils = new Utils_2.default(this.getMerchant());
        }
        return this.utils;
    }
    /**
     * 设置验证器实例
     * @param validator
     */
    setValidator(validator) {
        this.validator = validator;
    }
    getValidator() {
        if (!this.validator) {
            this.validator = new Validator_1.default(this.getMerchant());
        }
        return this.validator;
    }
    getClient() {
        if (!this.client) {
            this.client = (new Client_1.default(this.getMerchant(), this.getHttpClient(), this.config.get('http', {}))).setPresets(this.config.all());
        }
        return this.client;
    }
    /**
     * 设置客户端
     * @param client
     * @returns
     */
    setClient(client) {
        this.client = client.setPresets(this.config.all());
        return this;
    }
    /**
     * 获取请求默认配置
     * @returns
     */
    getHttpClientDefaultOptions() {
        return (0, merge_1.default)(true, {
            baseURL: 'https://api.mch.weixin.qq.com',
        }, this.getConfig().get('http'));
    }
}
;
;
(0, Utils_1.applyMixins)(Application, [ConfigMixin_1.default, CacheMixin_1.default, ServerRequestMixin_1.default, HttpClientMixin_1.default]);
module.exports = Application;
