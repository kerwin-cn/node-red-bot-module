import ProviderInterface from "node-socialite/dist/Core/ProviderInterface";
import CacheInterface from "../../Core/Contracts/CacheInterface";
import ConfigInterface from "../../Core/Contracts/ConfigInterface";
import AccessTokenAwareClient from "../../Core/HttpClient/AccessTokenAwareClient";
import HttpClientInterface from "../../Core/HttpClient/Contracts/HttpClientInterface";
import ServerInterface from "../../Core/Contracts/ServerInterface";
import ServerRequestInterface from "../../Core/Http/Contracts/ServerRequestInterface";
import Encryptor from "../../Core/Encryptor";
import AccountInterface from "./AccountInterface";
import { OfficialAccountOAuthFactory } from "../../Types/global";
import JsApiTicket from "../JsApiTicket";
import Utils from "../Utils";
import AccessTokenInterface from "../../Core/Contracts/AccessTokenInterface";
declare abstract class ApplicationInterface {
    /**
     * 获取当前账户实例
     * @returns
     */
    getAccount(): AccountInterface;
    /**
     * 获取加密机实例
     * @returns
     */
    getEncryptor(): Encryptor;
    /**
     * 获取服务端实例
     * @returns
     */
    getServer(): ServerInterface;
    /**
     * 获取当前请求实例
     * @returns
     */
    getRequest(): ServerRequestInterface;
    /**
     * 获取客户端实例
     * @returns
     */
    getClient(): AccessTokenAwareClient;
    /**
     * 创建客户端实例
     * @returns
     */
    createClient(): AccessTokenAwareClient;
    /**
     * 获取网络请求客户端实例
     * @returns
     */
    getHttpClient(): HttpClientInterface;
    /**
     * 获取配置信息实例
     * @returns
     */
    getConfig(): ConfigInterface;
    /**
     * 获取AccessToken实例
     * @returns
     */
    getAccessToken(): AccessTokenInterface;
    /**
     * 获取缓存实例
     * @returns
     */
    getCache(): CacheInterface;
    /**
     * 获取OAuth实例
     * @returns
     */
    getOAuth(): ProviderInterface;
    /**
     * 获取JsApiTicket实例
     * @returns
     */
    getTicket(): JsApiTicket;
    /**
     * 获取工具实例
     * @returns
     */
    getUtils(): Utils;
    /**
     * 设置OAuth工厂方法
     * @param oauthFactory
     * @returns
     */
    setOAuthFactory(oauthFactory: OfficialAccountOAuthFactory): this;
}
export = ApplicationInterface;
