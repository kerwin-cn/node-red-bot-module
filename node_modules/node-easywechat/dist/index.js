"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.definePaymentScannedHandler = exports.definePaymentRefundedHandler = exports.definePaymentPaidHandler = exports.definePaymentAlertHandler = exports.definePaymentFailHandler = exports.defineHttpClientFailureJudgeClosure = exports.defineOpenWorkServerHandler = exports.defineOpenPlatformServerHandler = exports.defineWorkServerHandler = exports.defineMiniAppServerHandler = exports.defineOfficeAccountServerHandler = exports.defineLogHandler = exports.defineOpenWorkConfig = exports.defineWorkConfig = exports.defineOpenPlatformConfig = exports.definePayConfig = exports.defineMiniAppConfig = exports.defineOfficialAccountConfig = exports.FormData = exports.PrivateKey = exports.PublicKey = exports.ServerRequest = exports.CacheInterface = exports.OpenWork = exports.Work = exports.OpenPlatform = exports.Pay = exports.MiniApp = exports.OfficialAccount = void 0;
const Application_1 = __importDefault(require("./OfficialAccount/Application"));
exports.OfficialAccount = Application_1.default;
const Application_2 = __importDefault(require("./MiniApp/Application"));
exports.MiniApp = Application_2.default;
const Application_3 = __importDefault(require("./Pay/Application"));
exports.Pay = Application_3.default;
const Application_4 = __importDefault(require("./OpenPlatform/Application"));
exports.OpenPlatform = Application_4.default;
const Application_5 = __importDefault(require("./Work/Application"));
exports.Work = Application_5.default;
const Application_6 = __importDefault(require("./OpenWork/Application"));
exports.OpenWork = Application_6.default;
const CacheInterface_1 = __importDefault(require("./Core/Contracts/CacheInterface"));
exports.CacheInterface = CacheInterface_1.default;
const ServerRequest_1 = __importDefault(require("./Core/Http/ServerRequest"));
exports.ServerRequest = ServerRequest_1.default;
const form_data_1 = __importDefault(require("form-data"));
exports.FormData = form_data_1.default;
const PublicKey_1 = require("./Core/Support/PublicKey");
Object.defineProperty(exports, "PublicKey", { enumerable: true, get: function () { return PublicKey_1.PublicKey; } });
const PrivateKey_1 = require("./Core/Support/PrivateKey");
Object.defineProperty(exports, "PrivateKey", { enumerable: true, get: function () { return PrivateKey_1.PrivateKey; } });
/**
 * 定义公众号配置
 * @param config
 */
function defineOfficialAccountConfig(config) {
    return config;
}
exports.defineOfficialAccountConfig = defineOfficialAccountConfig;
/**
 * 定义小程序配置
 * @param config
 */
function defineMiniAppConfig(config) {
    return config;
}
exports.defineMiniAppConfig = defineMiniAppConfig;
/**
 * 定义支付配置
 * @param config
 */
function definePayConfig(config) {
    return config;
}
exports.definePayConfig = definePayConfig;
/**
 * 定义开放平台配置
 * @param config
 */
function defineOpenPlatformConfig(config) {
    return config;
}
exports.defineOpenPlatformConfig = defineOpenPlatformConfig;
/**
 * 定义企业微信配置
 * @param config
 */
function defineWorkConfig(config) {
    return config;
}
exports.defineWorkConfig = defineWorkConfig;
/**
 * 定义企业微信开放平台配置
 * @param config
 */
function defineOpenWorkConfig(config) {
    return config;
}
exports.defineOpenWorkConfig = defineOpenWorkConfig;
/**
 * 定义日志处理函数
 * @param func
 */
function defineLogHandler(func) {
    return func;
}
exports.defineLogHandler = defineLogHandler;
/**
 * 定义公众号服务端消息处理函数
 * @param func
 */
function defineOfficeAccountServerHandler(func) {
    return func;
}
exports.defineOfficeAccountServerHandler = defineOfficeAccountServerHandler;
/**
 * 定义小程序服务端消息处理函数
 * @param func
 */
function defineMiniAppServerHandler(func) {
    return func;
}
exports.defineMiniAppServerHandler = defineMiniAppServerHandler;
/**
 * 定义企业微信服务端消息处理函数
 * @param func
 */
function defineWorkServerHandler(func) {
    return func;
}
exports.defineWorkServerHandler = defineWorkServerHandler;
/**
 * 定义开放平台服务端消息处理函数
 * @param func
 */
function defineOpenPlatformServerHandler(func) {
    return func;
}
exports.defineOpenPlatformServerHandler = defineOpenPlatformServerHandler;
/**
 * 定义企业微信开放平台服务端消息处理函数
 * @param func
 */
function defineOpenWorkServerHandler(func) {
    return func;
}
exports.defineOpenWorkServerHandler = defineOpenWorkServerHandler;
/**
 * 定义HttpClient错误判定回调
 * @param func
 */
function defineHttpClientFailureJudgeClosure(func) {
    return func;
}
exports.defineHttpClientFailureJudgeClosure = defineHttpClientFailureJudgeClosure;
/**
 * 定义支付通知错误处理函数
 * @param func
 */
function definePaymentFailHandler(func) {
    return func;
}
exports.definePaymentFailHandler = definePaymentFailHandler;
/**
 * 定义支付业务错误处理函数
 * @param func
 */
function definePaymentAlertHandler(func) {
    return func;
}
exports.definePaymentAlertHandler = definePaymentAlertHandler;
/**
 * 定义支付结果处理回调函数
 * @param func
 */
function definePaymentPaidHandler(func) {
    return func;
}
exports.definePaymentPaidHandler = definePaymentPaidHandler;
/**
 * 定义退款结果处理回调函数
 * @param func
 */
function definePaymentRefundedHandler(func) {
    return func;
}
exports.definePaymentRefundedHandler = definePaymentRefundedHandler;
/**
 * 定义扫码支付结果处理回调函数
 * @param func
 */
function definePaymentScannedHandler(func) {
    return func;
}
exports.definePaymentScannedHandler = definePaymentScannedHandler;
