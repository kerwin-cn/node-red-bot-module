'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const merge_1 = __importDefault(require("merge"));
class Utils {
    constructor(app) {
        this.app = app;
    }
    /**
     * 构建jssdk配置
     * @param url 完整URL地址
     * @param jsApiList api列表，默认：[]。可用列表：https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#63
     * @param openTagList 开放标签列表，默认：[]。可用列表：https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#附录-所有开放标签列表
     * @param debug 是否开启调试模式，默认：false
     * @returns
     */
    buildJsSdkConfig(url_1) {
        return __awaiter(this, arguments, void 0, function* (url, jsApiList = [], openTagList = [], debug = false) {
            return (0, merge_1.default)({
                jsApiList,
                openTagList,
                debug,
            }, yield this.app.getTicket().createConfigSignature(url));
        });
    }
    /**
     * 构建代理应用的jssdk配置
     * @param agentId 代理应用id
     * @param url 完整URL地址
     * @param jsApiList api列表，默认：[]。可用列表：https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#63
     * @param openTagList 开放标签列表，默认：[]。可用列表：https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_Open_Tag.html#附录-所有开放标签列表
     * @param debug 是否开启调试模式，默认：false
     * @returns
     */
    buildJsSdkAgentConfig(agentId_1, url_1) {
        return __awaiter(this, arguments, void 0, function* (agentId, url, jsApiList = [], openTagList = [], debug = false) {
            return (0, merge_1.default)({
                jsApiList,
                openTagList,
                debug,
            }, yield this.app.getTicket().createAgentConfigSignature(agentId, url));
        });
    }
}
;
module.exports = Utils;
